name: Release
run-name: Release a new version from ${{ github.ref_name }}
concurrency: production

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  release:
    if: github.ref_name == 'main'
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Bump version (${{ inputs.type }})
        id: bump-version
        shell: bash
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
        run: |
          OLD_VERSION=`poetry version -s`
          poetry version ${{ inputs.type }}
          NEW_VERSION=`poetry version -s`

          git config --global user.name "Nikos Chasiotis"
          git config --global user.email "hasiotis@gmail.com"

          git add pyproject.toml
          git commit -m "[skip ci] Bump version from v${OLD_VERSION} to v${NEW_VERSION}"
          git push --force
          git tag -a "v${NEW_VERSION}" -m "Version v${NEW_VERSION}"
          git push --tags

          echo "Release **${NEW_VERSION}**" >> $GITHUB_STEP_SUMMARY

          poetry publish -n --build -u __token__ -p ${POETRY_PYPI_TOKEN_PYPI}
